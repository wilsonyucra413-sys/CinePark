// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Proyecto.Data;

#nullable disable

namespace Proyecto.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Proyecto.Models.Asiento", b =>
                {
                    b.Property<int>("Id_asiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_asiento"));

                    b.Property<int>("Columna")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Fila")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int>("Id_sala")
                        .HasColumnType("integer");

                    b.Property<int?>("SalaId_sala")
                        .HasColumnType("integer");

                    b.HasKey("Id_asiento");

                    b.HasIndex("SalaId_sala");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("Proyecto.Models.Compra", b =>
                {
                    b.Property<int>("idCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idCompra"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("idCuenta")
                        .HasColumnType("integer");

                    b.Property<int>("idPelicula")
                        .HasColumnType("integer");

                    b.HasKey("idCompra");

                    b.HasIndex("idCuenta");

                    b.HasIndex("idPelicula");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Proyecto.Models.Cuenta", b =>
                {
                    b.Property<int>("idcuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idcuenta"));

                    b.Property<string>("Administrativo")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Funciones")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("Soporte")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Ventas")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.HasKey("idcuenta");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Proyecto.Models.Funcion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("AsientoId_asiento")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("horaFinal")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("horaInicio")
                        .HasColumnType("time without time zone");

                    b.Property<int>("idPelicula")
                        .HasColumnType("integer");

                    b.Property<int>("idSala")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("AsientoId_asiento");

                    b.HasIndex("idPelicula");

                    b.HasIndex("idSala");

                    b.ToTable("Funcion");
                });

            modelBuilder.Entity("Proyecto.Models.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPelicula"));

                    b.Property<int>("Duracion")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateOnly>("FechaEstreno")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImagenHorizontal")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImagenVertical")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("RestriccionEdad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Sipnosis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("IdPelicula");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("Proyecto.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateOnly>("FechaDeNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NumeroDeDocumento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Proyecto.Models.Sala", b =>
                {
                    b.Property<int>("Id_sala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_sala"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id_sala");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Proyecto.Models.administrador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("administrador");
                });

            modelBuilder.Entity("Proyecto.Models.Asiento", b =>
                {
                    b.HasOne("Proyecto.Models.Sala", "Sala")
                        .WithMany("Asientos")
                        .HasForeignKey("SalaId_sala");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Proyecto.Models.Compra", b =>
                {
                    b.HasOne("Proyecto.Models.Cuenta", "Cuenta")
                        .WithMany("Compras")
                        .HasForeignKey("idCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Models.Pelicula", "Pelicula")
                        .WithMany("Compras")
                        .HasForeignKey("idPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("Proyecto.Models.Cuenta", b =>
                {
                    b.HasOne("Proyecto.Models.Persona", "Persona")
                        .WithOne("Cuenta")
                        .HasForeignKey("Proyecto.Models.Cuenta", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Proyecto.Models.Funcion", b =>
                {
                    b.HasOne("Proyecto.Models.Asiento", null)
                        .WithMany("Funciones")
                        .HasForeignKey("AsientoId_asiento");

                    b.HasOne("Proyecto.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("idPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.Models.Sala", "Sala")
                        .WithMany("Funciones")
                        .HasForeignKey("idSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Proyecto.Models.Asiento", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("Proyecto.Models.Cuenta", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Proyecto.Models.Pelicula", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Proyecto.Models.Persona", b =>
                {
                    b.Navigation("Cuenta")
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto.Models.Sala", b =>
                {
                    b.Navigation("Asientos");

                    b.Navigation("Funciones");
                });
#pragma warning restore 612, 618
        }
    }
}
